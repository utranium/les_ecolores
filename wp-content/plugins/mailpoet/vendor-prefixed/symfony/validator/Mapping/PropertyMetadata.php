<?php
 namespace MailPoetVendor\Symfony\Component\Validator\Mapping; if (!defined('ABSPATH')) exit; use MailPoetVendor\Symfony\Component\Validator\Exception\ValidatorException; class PropertyMetadata extends \MailPoetVendor\Symfony\Component\Validator\Mapping\MemberMetadata { public function __construct($class, $name) { if (!\property_exists($class, $name)) { throw new \MailPoetVendor\Symfony\Component\Validator\Exception\ValidatorException(\sprintf('Property "%s" does not exist in class "%s"', $name, $class)); } parent::__construct($class, $name, $name); } public function getPropertyValue($object) { return $this->getReflectionMember($object)->getValue($object); } protected function newReflectionMember($objectOrClassName) { $originalClass = \is_string($objectOrClassName) ? $objectOrClassName : \get_class($objectOrClassName); while (!\property_exists($objectOrClassName, $this->getName())) { $objectOrClassName = \get_parent_class($objectOrClassName); if (\false === $objectOrClassName) { throw new \MailPoetVendor\Symfony\Component\Validator\Exception\ValidatorException(\sprintf('Property "%s" does not exist in class "%s".', $this->getName(), $originalClass)); } } $member = new \ReflectionProperty($objectOrClassName, $this->getName()); $member->setAccessible(\true); return $member; } } 