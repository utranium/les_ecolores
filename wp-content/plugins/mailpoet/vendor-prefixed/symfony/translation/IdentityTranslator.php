<?php
 namespace MailPoetVendor\Symfony\Component\Translation; if (!defined('ABSPATH')) exit; class IdentityTranslator implements \MailPoetVendor\Symfony\Component\Translation\TranslatorInterface { private $selector; private $locale; public function __construct(\MailPoetVendor\Symfony\Component\Translation\MessageSelector $selector = null) { $this->selector = $selector ?: new \MailPoetVendor\Symfony\Component\Translation\MessageSelector(); } public function setLocale($locale) { $this->locale = $locale; } public function getLocale() { return $this->locale ?: \Locale::getDefault(); } public function trans($id, array $parameters = [], $domain = null, $locale = null) { return \strtr((string) $id, $parameters); } public function transChoice($id, $number, array $parameters = [], $domain = null, $locale = null) { return \strtr($this->selector->choose((string) $id, (int) $number, $locale ?: $this->getLocale()), $parameters); } } 