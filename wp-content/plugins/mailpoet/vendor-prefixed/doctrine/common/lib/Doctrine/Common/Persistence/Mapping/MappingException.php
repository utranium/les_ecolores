<?php
 namespace MailPoetVendor\Doctrine\Common\Persistence\Mapping; if (!defined('ABSPATH')) exit; class MappingException extends \Exception { public static function classNotFoundInNamespaces($className, $namespaces) { return new self("The class '" . $className . "' was not found in the " . "chain configured namespaces " . \implode(", ", $namespaces)); } public static function pathRequired() { return new self("Specifying the paths to your entities is required " . "in the AnnotationDriver to retrieve all class names."); } public static function fileMappingDriversRequireConfiguredDirectoryPath($path = null) { if (!empty($path)) { $path = '[' . $path . ']'; } return new self('File mapping drivers must have a valid directory path, ' . 'however the given path ' . $path . ' seems to be incorrect!'); } public static function mappingFileNotFound($entityName, $fileName) { return new self("No mapping file found named '{$fileName}' for class '{$entityName}'."); } public static function invalidMappingFile($entityName, $fileName) { return new self("Invalid mapping file '{$fileName}' for class '{$entityName}'."); } public static function nonExistingClass($className) { return new self("Class '{$className}' does not exist"); } } 