<?php
 namespace MailPoetVendor\Doctrine\DBAL; if (!defined('ABSPATH')) exit; use MailPoetVendor\Doctrine\DBAL\Logging\SQLLogger; use MailPoetVendor\Doctrine\Common\Cache\Cache; class Configuration { protected $_attributes = array(); public function setSQLLogger(\MailPoetVendor\Doctrine\DBAL\Logging\SQLLogger $logger = null) { $this->_attributes['sqlLogger'] = $logger; } public function getSQLLogger() { return isset($this->_attributes['sqlLogger']) ? $this->_attributes['sqlLogger'] : null; } public function getResultCacheImpl() { return isset($this->_attributes['resultCacheImpl']) ? $this->_attributes['resultCacheImpl'] : null; } public function setResultCacheImpl(\MailPoetVendor\Doctrine\Common\Cache\Cache $cacheImpl) { $this->_attributes['resultCacheImpl'] = $cacheImpl; } public function setFilterSchemaAssetsExpression($filterExpression) { $this->_attributes['filterSchemaAssetsExpression'] = $filterExpression; } public function getFilterSchemaAssetsExpression() { if (isset($this->_attributes['filterSchemaAssetsExpression'])) { return $this->_attributes['filterSchemaAssetsExpression']; } return null; } public function setAutoCommit($autoCommit) { $this->_attributes['autoCommit'] = (bool) $autoCommit; } public function getAutoCommit() { if (isset($this->_attributes['autoCommit'])) { return $this->_attributes['autoCommit']; } return \true; } } 