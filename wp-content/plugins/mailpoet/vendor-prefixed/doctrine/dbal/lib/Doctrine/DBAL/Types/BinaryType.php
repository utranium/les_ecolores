<?php
 namespace MailPoetVendor\Doctrine\DBAL\Types; if (!defined('ABSPATH')) exit; use MailPoetVendor\Doctrine\DBAL\Platforms\AbstractPlatform; class BinaryType extends \MailPoetVendor\Doctrine\DBAL\Types\Type { public function getSQLDeclaration(array $fieldDeclaration, \MailPoetVendor\Doctrine\DBAL\Platforms\AbstractPlatform $platform) { return $platform->getBinaryTypeDeclarationSQL($fieldDeclaration); } public function convertToPHPValue($value, \MailPoetVendor\Doctrine\DBAL\Platforms\AbstractPlatform $platform) { if (null === $value) { return null; } if (\is_string($value)) { $fp = \fopen('php://temp', 'rb+'); \fwrite($fp, $value); \fseek($fp, 0); $value = $fp; } if (!\is_resource($value)) { throw \MailPoetVendor\Doctrine\DBAL\Types\ConversionException::conversionFailed($value, self::BINARY); } return $value; } public function getName() { return \MailPoetVendor\Doctrine\DBAL\Types\Type::BINARY; } public function getBindingType() { return \PDO::PARAM_LOB; } } 