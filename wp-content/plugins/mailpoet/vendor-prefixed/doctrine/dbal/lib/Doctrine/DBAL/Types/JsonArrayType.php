<?php
 namespace MailPoetVendor\Doctrine\DBAL\Types; if (!defined('ABSPATH')) exit; use MailPoetVendor\Doctrine\DBAL\Platforms\AbstractPlatform; class JsonArrayType extends \MailPoetVendor\Doctrine\DBAL\Types\Type { public function getSQLDeclaration(array $fieldDeclaration, \MailPoetVendor\Doctrine\DBAL\Platforms\AbstractPlatform $platform) { return $platform->getJsonTypeDeclarationSQL($fieldDeclaration); } public function convertToDatabaseValue($value, \MailPoetVendor\Doctrine\DBAL\Platforms\AbstractPlatform $platform) { if (null === $value) { return null; } return \json_encode($value); } public function convertToPHPValue($value, \MailPoetVendor\Doctrine\DBAL\Platforms\AbstractPlatform $platform) { if ($value === null || $value === '') { return array(); } $value = \is_resource($value) ? \stream_get_contents($value) : $value; return \json_decode($value, \true); } public function getName() { return \MailPoetVendor\Doctrine\DBAL\Types\Type::JSON_ARRAY; } public function requiresSQLCommentHint(\MailPoetVendor\Doctrine\DBAL\Platforms\AbstractPlatform $platform) { return !$platform->hasNativeJsonType(); } } 