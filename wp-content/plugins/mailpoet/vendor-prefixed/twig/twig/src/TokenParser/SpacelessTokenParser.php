<?php
 namespace MailPoetVendor\Twig\TokenParser; if (!defined('ABSPATH')) exit; use MailPoetVendor\Twig\Node\SpacelessNode; use MailPoetVendor\Twig\Token; class SpacelessTokenParser extends \MailPoetVendor\Twig\TokenParser\AbstractTokenParser { public function parse(\MailPoetVendor\Twig\Token $token) { $lineno = $token->getLine(); $this->parser->getStream()->expect(\MailPoetVendor\Twig\Token::BLOCK_END_TYPE); $body = $this->parser->subparse([$this, 'decideSpacelessEnd'], \true); $this->parser->getStream()->expect(\MailPoetVendor\Twig\Token::BLOCK_END_TYPE); return new \MailPoetVendor\Twig\Node\SpacelessNode($body, $lineno, $this->getTag()); } public function decideSpacelessEnd(\MailPoetVendor\Twig\Token $token) { return $token->test('endspaceless'); } public function getTag() { return 'spaceless'; } } \class_alias('MailPoetVendor\\Twig\\TokenParser\\SpacelessTokenParser', 'MailPoetVendor\\Twig_TokenParser_Spaceless'); 